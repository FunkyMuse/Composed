buildscript {
    ext {
        //libs
        kotlin_version = '1.5.31'
        lifecycle_version = '2.4.0'
        coroutines_version = '1.5.2'
        turbine_version = '0.7.0'
        jupiter_version = '5.8.1'
        compose_version = '1.1.0-beta01'
    }
    ext {
        //compilation
        compileVersion = 30
        minVersion = 21
        verCode = 1
        verName = "0.0.8"
        testRunner = "androidx.test.runner.AndroidJUnitRunner"

        //publishing
        group_id = "com.funkymuse.composed"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

allprojects {
    group = "io.github.funkymuse"
}


subprojects { project ->
    if (project.name != 'app') {
        //setup gradle for libraries
        apply plugin: 'com.android.library'
        apply plugin: 'kotlin-android'
        apply plugin: 'maven-publish'

        afterEvaluate {
            publishing {
                publications {
                    // Creates a Maven publication called "release".
                    release(MavenPublication) {
                        // Applies the component for the release build variant.
                        from components.release

                        // You can then customize attributes of the publication as shown below.
                        groupId = group_id
                        artifactId = project.name
                        version = verName
                    }
                    // Creates a Maven publication called “debug”.
                    debug(MavenPublication) {
                        // Applies the component for the debug build variant.
                        from components.debug

                        groupId = group_id
                        artifactId = project.name
                        version = verName
                    }
                }
            }
        }

    } else {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
    }

    dependencies {
        //test
        androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
        androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
        androidTestImplementation "app.cash.turbine:turbine:$turbine_version"
        debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


        testImplementation "app.cash.turbine:turbine:$turbine_version"
        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"

        //lifecycle
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

        implementation "androidx.compose.ui:ui:$compose_version"
        implementation "androidx.compose.ui:ui-tooling:$compose_version"
        implementation "androidx.compose.material:material:$compose_version"
        implementation 'androidx.activity:activity-compose:1.4.0'
    }

    android {
        compileSdkVersion compileVersion

        defaultConfig {
            minSdkVersion minVersion
            targetSdkVersion compileVersion
            versionCode verCode
            versionName verName
            testInstrumentationRunner testRunner
        }

        compileOptions {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
        }

        testOptions.unitTests.all {
            useJUnitPlatform()
            testLogging {
                events 'passed', 'failed', 'skipped', 'standardOut', 'standardError'
            }
        }

        composeOptions {
            kotlinCompilerExtensionVersion compose_version
        }

        kotlinOptions {
            jvmTarget = '1.8'
            useIR = true
        }

        buildFeatures {
            aidl = false
            renderScript = false
            resValues = false
            shaders = false
            buildConfig = false
            compose = true
        }

        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }

        packagingOptions {
            exclude 'META-INF/AL2.0'
            exclude 'META-INF/LGPL2.1'
        }

    }
}

task testAll(dependsOn: ['test', 'connectedAndroidTest']) {
    group = 'custom_tasks'
    description = "Run all tests"
}

